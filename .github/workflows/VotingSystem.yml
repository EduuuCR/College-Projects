from django.db import models
from django.contrib.auth.models import User
from django.urls import reverse
from django.shortcuts import render, redirect
from django.http import HttpResponse
from django.contrib.auth.decorators import login_required
from django.contrib import messages

# Models
class Competition(models.Model):
    name = models.CharField(max_length=200)
    description = models.TextField()
    start_date = models.DateField()
    end_date = models.DateField()

    def __str__(self):
        return self.name

class Entry(models.Model):
    competition = models.ForeignKey(Competition, on_delete=models.CASCADE)
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    title = models.CharField(max_length=200)
    description = models.TextField()
    image = models.ImageField(upload_to='entries/')
    votes = models.IntegerField(default=0)

    def __str__(self):
        return self.title

# Views
@login_required
def competition_list(request):
    competitions = Competition.objects.all()
    return render(request, 'competition_list.html', {'competitions': competitions})

@login_required
def competition_detail(request, competition_id):
    competition = Competition.objects.get(id=competition_id)
    entries = Entry.objects.filter(competition=competition)
    return render(request, 'competition_detail.html', {'competition': competition, 'entries': entries})

@login_required
def vote_entry(request, entry_id):
    entry = Entry.objects.get(id=entry_id)
    if request.method == 'POST':
        entry.votes += 1
        entry.save()
        messages.success(request, 'Your vote has been counted!')
        return redirect(reverse('competition_detail', args=[entry.competition.id]))
    return HttpResponse('Invalid request', status=400)

@login_required
def add_entry(request, competition_id):
    competition = Competition.objects.get(id=competition_id)
    if request.method == 'POST':
        title = request.POST['title']
        description = request.POST['description']
        image = request.FILES['image']
        Entry.objects.create(competition=competition, user=request.user, title=title, description=description, image=image)
        messages.success(request, 'Entry added successfully!')
        return redirect(reverse('competition_detail', args=[competition.id]))
    return render(request, 'add_entry.html', {'competition': competition})

# URLs
from django.urls import path

urlpatterns = [
    path('', competition_list, name='competition_list'),
    path('competition/<int:competition_id>/', competition_detail, name='competition_detail'),
    path('competition/<int:competition_id>/add-entry/', add_entry, name='add_entry'),
    path('entry/<int:entry_id>/vote/', vote_entry, name='vote_entry'),
]

# Templates (HTML examples)

## competition_list.html
<!--
<h1>Competitions</h1>
<ul>
    {% for competition in competitions %}
    <li><a href="{% url 'competition_detail' competition.id %}">{{ competition.name }}</a></li>
    {% endfor %}
</ul>
-->

## competition_detail.html
<!--
<h1>{{ competition.name }}</h1>
<p>{{ competition.description }}</p>
<ul>
    {% for entry in entries %}
    <li>
        <img src="{{ entry.image.url }}" alt="{{ entry.title }}" width="100">
        <h3>{{ entry.title }}</h3>
        <p>{{ entry.description }}</p>
        <p>Votes: {{ entry.votes }}</p>
        <form method="post" action="{% url 'vote_entry' entry.id %}">
            {% csrf_token %}
            <button type="submit">Vote</button>
        </form>
    </li>
    {% endfor %}
</ul>
<a href="{% url 'add_entry' competition.id %}">Add Entry</a>
-->

## add_entry.html
<!--
<h1>Add Entry</h1>
<form method="post" enctype="multipart/form-data">
    {% csrf_token %}
    <label>Title:</label>
    <input type="text" name="title" required><br>
    <label>Description:</label>
    <textarea name="description" required></textarea><br>
    <label>Image:</label>
    <input type="file" name="image" required><br>
    <button type="submit">Add Entry</button>
</form>
-->
